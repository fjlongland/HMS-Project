THIS DOC IS JUST TO TRACK DAILY WORK DONE.

08/07-FJ-   Set up and tested git repository. Made sure everything is ready for when the real work starts.

08/10-FJ-   created user database
            wrote first api query and it works
            connected to postgress database and retriever user values.

08/12-FJ-   connected frontend to api using javascript and made frirst succesful api call to backend
            cleaned up code to make it easier to read

08/15-FJ-   finished adding all CRUD operation API queries 
            Added response model for users
            Had a git merge conflict witch was fun(just kill me next time)
            tested all api calls using post man and they all work

08/23-FJ-   I forgor to do the stand up last time...
                -implemented password hashing 
                -implemented JWT token generations
            today...
                -added all CRUD api calls for posts 
                -created post table in DB 
                -added response model to post operations

08/25-FJ-   i have been trying to figure out unit tests for a long tome now but 
            i have had little success.
            i had to delete my dev branch because i messed up the code so backend
            thank you git
            finally had a break through with file uploads ... 
            user can now select a video file to upload on the website and it
            will be stored in a target directory through the API

09/08-Jason-Ek sit net hierdie in om iets te toets.

09/14-FJ-   i havent been updating this doc very well but this is what happened in the past 2 weeks:
    	    -updatred the database to final form
            -updated all the code to reflect new databse attributes
            -added basic file handling system that creates new sub repo in target directory 
            -added front end functionality that allows users to log in from the testing front end website
            -api now stores the url to the video after user uploads the video in the posts database
            -videos uploaded bu a specific uses gets saved in their specific sub directory in the destination directory
            -added environment variables and a .env folder to keep sensitive info safe
            -(finaly) added a .gitignore file so i dont upload everything to git when commiting changes.

